%!PS-Adobe-2.0
%%Title: plot.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Aug 31 13:52:34 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -73 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1122 880 M
63 0 V
5641 0 R
-63 0 V
stroke
990 880 M
[ [(Helvetica) 220.0 0.0 true true 0 (-1)]
] -73.3 MRshow
1.000 UL
LTb
1122 1270 M
63 0 V
5641 0 R
-63 0 V
stroke
990 1270 M
[ [(Helvetica) 220.0 0.0 true true 0 (-0.8)]
] -73.3 MRshow
1.000 UL
LTb
1122 1659 M
63 0 V
5641 0 R
-63 0 V
stroke
990 1659 M
[ [(Helvetica) 220.0 0.0 true true 0 (-0.6)]
] -73.3 MRshow
1.000 UL
LTb
1122 2049 M
63 0 V
5641 0 R
-63 0 V
stroke
990 2049 M
[ [(Helvetica) 220.0 0.0 true true 0 (-0.4)]
] -73.3 MRshow
1.000 UL
LTb
1122 2438 M
63 0 V
5641 0 R
-63 0 V
stroke
990 2438 M
[ [(Helvetica) 220.0 0.0 true true 0 (-0.2)]
] -73.3 MRshow
1.000 UL
LTb
1122 2828 M
63 0 V
5641 0 R
-63 0 V
stroke
990 2828 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
1.000 UL
LTb
1122 3218 M
63 0 V
5641 0 R
-63 0 V
stroke
990 3218 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.2)]
] -73.3 MRshow
1.000 UL
LTb
1122 3607 M
63 0 V
5641 0 R
-63 0 V
stroke
990 3607 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.4)]
] -73.3 MRshow
1.000 UL
LTb
1122 3997 M
63 0 V
5641 0 R
-63 0 V
stroke
990 3997 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MRshow
1.000 UL
LTb
1122 4386 M
63 0 V
5641 0 R
-63 0 V
stroke
990 4386 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.8)]
] -73.3 MRshow
1.000 UL
LTb
1122 4776 M
63 0 V
5641 0 R
-63 0 V
stroke
990 4776 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MRshow
1.000 UL
LTb
1251 880 M
0 63 V
0 3833 R
0 -63 V
stroke
1251 660 M
[ [(Helvetica) 220.0 0.0 true true 0 (-6)]
] -73.3 MCshow
1.000 UL
LTb
2158 880 M
0 63 V
0 3833 R
0 -63 V
stroke
2158 660 M
[ [(Helvetica) 220.0 0.0 true true 0 (-4)]
] -73.3 MCshow
1.000 UL
LTb
3066 880 M
0 63 V
0 3833 R
0 -63 V
stroke
3066 660 M
[ [(Helvetica) 220.0 0.0 true true 0 (-2)]
] -73.3 MCshow
1.000 UL
LTb
3974 880 M
0 63 V
0 3833 R
0 -63 V
stroke
3974 660 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
4882 880 M
0 63 V
0 3833 R
0 -63 V
stroke
4882 660 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 2)]
] -73.3 MCshow
1.000 UL
LTb
5790 880 M
0 63 V
0 3833 R
0 -63 V
stroke
5790 660 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 4)]
] -73.3 MCshow
1.000 UL
LTb
6697 880 M
0 63 V
0 3833 R
0 -63 V
stroke
6697 660 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 6)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1122 880 M
5704 0 V
0 3896 V
-5704 0 V
0 -3896 V
LTb
220 2828 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (y)]
] -73.3 MCshow
grestore
LTb
3974 330 M
[ [(Helvetica) 220.0 0.0 true true 0 (x)]
] -73.3 MCshow
330 110 M
[ [(Helvetica) 220.0 0.0 true true 0 (Thu Aug 31 13:52:34 2017)]
] -73.3 MLshow
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
5839 4603 M
[ [(Helvetica) 220.0 0.0 true true 0 (Sine Wave)]
] -73.3 MRshow
LT0
5971 4603 M
591 0 V
1122 2828 M
58 247 V
57 242 V
58 235 V
57 223 V
58 208 V
58 189 V
57 168 V
58 143 V
58 117 V
57 88 V
58 58 V
57 28 V
58 -4 V
58 -35 V
57 -66 V
58 -96 V
57 -123 V
58 -150 V
58 -173 V
57 -194 V
58 -212 V
58 -227 V
57 -237 V
58 -244 V
57 -247 V
58 -246 V
58 -241 V
57 -232 V
58 -220 V
57 -203 V
58 -184 V
58 -162 V
57 -137 V
58 -110 V
58 -81 V
57 -50 V
58 -20 V
57 12 V
58 43 V
58 73 V
57 103 V
58 130 V
57 156 V
58 179 V
58 199 V
57 216 V
58 229 V
58 239 V
57 245 V
58 248 V
57 245 V
58 239 V
58 229 V
57 216 V
58 199 V
58 179 V
57 156 V
58 130 V
57 103 V
58 73 V
58 43 V
57 12 V
58 -20 V
57 -50 V
58 -81 V
58 -110 V
57 -137 V
58 -162 V
58 -184 V
57 -203 V
58 -220 V
57 -232 V
58 -241 V
58 -246 V
57 -247 V
58 -244 V
57 -237 V
58 -227 V
58 -212 V
57 -194 V
58 -173 V
58 -150 V
57 -123 V
58 -96 V
57 -66 V
58 -35 V
58 -4 V
57 28 V
58 58 V
57 88 V
58 117 V
58 143 V
57 168 V
58 189 V
58 208 V
57 223 V
58 235 V
57 242 V
58 247 V
1122 2828 Pls
1180 3075 Pls
1237 3317 Pls
1295 3552 Pls
1352 3775 Pls
1410 3983 Pls
1468 4172 Pls
1525 4340 Pls
1583 4483 Pls
1641 4600 Pls
1698 4688 Pls
1756 4746 Pls
1813 4774 Pls
1871 4770 Pls
1929 4735 Pls
1986 4669 Pls
2044 4573 Pls
2101 4450 Pls
2159 4300 Pls
2217 4127 Pls
2274 3933 Pls
2332 3721 Pls
2390 3494 Pls
2447 3257 Pls
2505 3013 Pls
2562 2766 Pls
2620 2520 Pls
2678 2279 Pls
2735 2047 Pls
2793 1827 Pls
2850 1624 Pls
2908 1440 Pls
2966 1278 Pls
3023 1141 Pls
3081 1031 Pls
3139 950 Pls
3196 900 Pls
3254 880 Pls
3311 892 Pls
3369 935 Pls
3427 1008 Pls
3484 1111 Pls
3542 1241 Pls
3599 1397 Pls
3657 1576 Pls
3715 1775 Pls
3772 1991 Pls
3830 2220 Pls
3888 2459 Pls
3945 2704 Pls
4003 2952 Pls
4060 3197 Pls
4118 3436 Pls
4176 3665 Pls
4233 3881 Pls
4291 4080 Pls
4349 4259 Pls
4406 4415 Pls
4464 4545 Pls
4521 4648 Pls
4579 4721 Pls
4637 4764 Pls
4694 4776 Pls
4752 4756 Pls
4809 4706 Pls
4867 4625 Pls
4925 4515 Pls
4982 4378 Pls
5040 4216 Pls
5098 4032 Pls
5155 3829 Pls
5213 3609 Pls
5270 3377 Pls
5328 3136 Pls
5386 2890 Pls
5443 2643 Pls
5501 2399 Pls
5558 2162 Pls
5616 1935 Pls
5674 1723 Pls
5731 1529 Pls
5789 1356 Pls
5847 1206 Pls
5904 1083 Pls
5962 987 Pls
6019 921 Pls
6077 886 Pls
6135 882 Pls
6192 910 Pls
6250 968 Pls
6307 1056 Pls
6365 1173 Pls
6423 1316 Pls
6480 1484 Pls
6538 1673 Pls
6596 1881 Pls
6653 2104 Pls
6711 2339 Pls
6768 2581 Pls
6826 2828 Pls
6266 4603 Pls
1.000 UP
1.000 UL
LT1
LTb
5839 4383 M
[ [(Helvetica) 220.0 0.0 true true 0 (Cosine Wave)]
] -73.3 MRshow
LT1
5971 4383 M
591 0 V
1122 4776 M
58 -16 V
57 -46 V
58 -78 V
57 -106 V
58 -133 V
58 -159 V
57 -182 V
58 -201 V
58 -218 V
57 -231 V
58 -240 V
57 -245 V
58 -247 V
58 -245 V
57 -238 V
58 -228 V
57 -214 V
58 -197 V
58 -176 V
57 -153 V
58 -126 V
58 -100 V
57 -69 V
58 -39 V
57 -8 V
58 23 V
58 55 V
57 84 V
58 114 V
57 140 V
58 165 V
58 186 V
57 206 V
58 221 V
58 234 V
57 242 V
58 246 V
57 247 V
58 243 V
58 236 V
57 225 V
58 210 V
57 192 V
58 170 V
58 147 V
57 120 V
58 92 V
58 62 V
57 31 V
58 0 V
57 -31 V
58 -62 V
58 -92 V
57 -120 V
58 -147 V
58 -170 V
57 -192 V
58 -210 V
57 -225 V
58 -236 V
58 -243 V
57 -247 V
58 -246 V
57 -242 V
58 -234 V
58 -221 V
57 -206 V
58 -186 V
58 -165 V
57 -140 V
58 -114 V
57 -84 V
58 -55 V
58 -23 V
57 8 V
58 39 V
57 69 V
58 100 V
58 126 V
57 153 V
58 176 V
58 197 V
57 214 V
58 228 V
57 238 V
58 245 V
58 247 V
57 245 V
58 240 V
57 231 V
58 218 V
58 201 V
57 182 V
58 159 V
58 133 V
57 106 V
58 78 V
57 46 V
58 16 V
1122 4776 Crs
1180 4760 Crs
1237 4714 Crs
1295 4636 Crs
1352 4530 Crs
1410 4397 Crs
1468 4238 Crs
1525 4056 Crs
1583 3855 Crs
1641 3637 Crs
1698 3406 Crs
1756 3166 Crs
1813 2921 Crs
1871 2674 Crs
1929 2429 Crs
1986 2191 Crs
2044 1963 Crs
2101 1749 Crs
2159 1552 Crs
2217 1376 Crs
2274 1223 Crs
2332 1097 Crs
2390 997 Crs
2447 928 Crs
2505 889 Crs
2562 881 Crs
2620 904 Crs
2678 959 Crs
2735 1043 Crs
2793 1157 Crs
2850 1297 Crs
2908 1462 Crs
2966 1648 Crs
3023 1854 Crs
3081 2075 Crs
3139 2309 Crs
3196 2551 Crs
3254 2797 Crs
3311 3044 Crs
3369 3287 Crs
3427 3523 Crs
3484 3748 Crs
3542 3958 Crs
3599 4150 Crs
3657 4320 Crs
3715 4467 Crs
3772 4587 Crs
3830 4679 Crs
3888 4741 Crs
3945 4772 Crs
4003 4772 Crs
4060 4741 Crs
4118 4679 Crs
4176 4587 Crs
4233 4467 Crs
4291 4320 Crs
4349 4150 Crs
4406 3958 Crs
4464 3748 Crs
4521 3523 Crs
4579 3287 Crs
4637 3044 Crs
4694 2797 Crs
4752 2551 Crs
4809 2309 Crs
4867 2075 Crs
4925 1854 Crs
4982 1648 Crs
5040 1462 Crs
5098 1297 Crs
5155 1157 Crs
5213 1043 Crs
5270 959 Crs
5328 904 Crs
5386 881 Crs
5443 889 Crs
5501 928 Crs
5558 997 Crs
5616 1097 Crs
5674 1223 Crs
5731 1376 Crs
5789 1552 Crs
5847 1749 Crs
5904 1963 Crs
5962 2191 Crs
6019 2429 Crs
6077 2674 Crs
6135 2921 Crs
6192 3166 Crs
6250 3406 Crs
6307 3637 Crs
6365 3855 Crs
6423 4056 Crs
6480 4238 Crs
6538 4397 Crs
6596 4530 Crs
6653 4636 Crs
6711 4714 Crs
6768 4760 Crs
6826 4776 Crs
6266 4383 Crs
1.000 UL
LTb
1122 880 M
5704 0 V
0 3896 V
-5704 0 V
0 -3896 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
